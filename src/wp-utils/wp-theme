#!/usr/bin/env bash

# Download theme (curl)
# $1 - theme slug
# $2 - theme version (optional)
# Returns 0 on success, X on failure
download() {
    local themeSlug="${1:?download: THEME_SLUG is required}"
    local themeVersion="${2:-}"
    local themeFilename="${themeSlug}.zip"

    if [ -n "${themeVersion}" ]; then
        themeFilename="${themeSlug}.${themeVersion}.zip"
    fi

    curl --fail -gsO "https://downloads.wordpress.org/theme/${themeFilename}" || return $?
    echo "${themeFilename}"
    return 0
}

# Unpack theme (unzip)
# $1 - theme slug
# $2 - theme version (optional)
# Returns 0 on success, 1 on failure
unpack() {
    local themesDir="${TARGET_THEMES_DIR:?check: TARGET_THEMES_DIR is required}"
    local themeSlug="${1:?unpack: THEME_SLUG is required}"
    local themeVersion="${2:-}"
    local themeFilename="${themeSlug}.zip"

    if [ -n "${themeVersion}" ]; then
        themeFilename="${themeSlug}.${themeVersion}.zip"
    fi

    if [ -f "${themeFilename}" ]; then
        unzip -qq -d "${themesDir}" "${themeFilename}" || return $?
        rm "${themeFilename}" -f
        return 0
    fi
    return 1
}

# Check if theme is installed
# $1 - theme slug
# Returns 0 if theme is installed, 1 otherwise
check() {
    local themesDir="${TARGET_THEMES_DIR:?check: TARGET_THEMES_DIR is required}"
    local themeSlug="${1:?check: THEME_SLUG is required}"
    local themePath="${themesDir}/${themeSlug}"

    # Check if theme directory exists
    if [ ! -d "${themePath}" ]; then
        return 1
    fi

    # Check if theme theme.json exists - if yes, theme is probably installed successfully
    if [ -f "${themePath}/theme.json" ]; then
        return 0
    fi

    # Check if theme index.php exists - if yes, theme is probably installed successfully
    if [ -f "${themePath}/index.php" ]; then
        return 0
    fi

    # Check if theme directory is empty - if not, theme is probably installed successfully
    if [ "$(ls -A "${themePath}")" ]; then
        return 0
    fi

    # If we got here, then theme is not installed
    return 1
}

# Delete theme
# $1 - theme slug
# Returns 0 on success, X on failure
delete() {
    local themesDir="${TARGET_THEMES_DIR:?delete: TARGET_THEMES_DIR is required}"
    local themeSlug="${1:?delete: THEME_SLUG is required}"
    local themePath="${themesDir}/${themeSlug}"

    # Check if theme directory exists
    if [ ! -d "${themePath}" ]; then
        return 1
    fi

    rm -rf "${themePath}"
    return $?
}

# Main function
main() {
    TARGET_THEMES_DIR="${WP_THEMES_PATH:?WP_THEMES_PATH is required}"
    export TARGET_THEMES_DIR

    local action="${1:?ACTION is required}"

    # Execute command by calling function with the same name
    case "${action}" in
    download)
        download "${@:2}"
        return $?
        ;;
    unpack)
        unpack "${@:2}"
        return $?
        ;;
    check)
        check "${@:2}"
        return $?
        ;;
    delete)
        delete "${@:2}"
        return $?
        ;;
    *)
        echo "Error: Unknown action '${action}'"
        return 1
        ;;
    esac
}

main "${@}"
